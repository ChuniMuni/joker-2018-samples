# we actually don't need any interaction with Eureka server
eureka.client.enabled=false

# inspite of JavaMelody's reference the following line doesn't solve the issue with proxy
# javamelody.advisor-auto-proxy-creator-enabled=false

# The following paramenter allows application to start with HicariCP and JavaMelody but prevents the latter from
# monitoring JDBC connections and SQL queries
#javamelody.excluded-datasources=scopedTarget.dataSource

# The following parameters forces Spring Boot to select Tomcat JDBC pool instead of HikariCP.
# Uncomment the following line alongside with build.gradle:11 to avoid the crash on startup.
#spring.datasource.type=org.apache.tomcat.jdbc.pool.DataSource

# The following parameter allows to avoid CGLIB proxying by means of disabling RefreshScope facilities
#spring.cloud.refresh.enabled=false

# to make log records more compact
logging.pattern.console=%clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(%-40.40logger{39}){cyan} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}